# Assignment 3 - Starting on your app (graded)

**Date**: 20/02/2022

**Group members participating**: Rasmus Thors√∏e, Sam Martin Vargas Giagnocavo and Nishka Dasgupta.

**Activity duration**: 7-8 hours

## Goal
- Start creating our own AR app
- Be able to add, and remove objects
- Be able to move and rotate objects

## Plan
The plan was for Nishka to do exercise 1, creating the intial scene, indication marker, "delete all" button etc. Then for Rasmus to do exercise 2, 
adding selection capabilities with highlighting, as well as the ability to individually delete items. Exercise 3 was planned to be done by Nishka and 
Sam in cooperation, adding the ability to move and rotate objects. The plan was created like this due to the tasks being very dependent on each other, 
and needing to fit that into our individual time constraints.  

## Results
### <ins>Exercise 1</ins>
We created a new scene, Assignment 3, and implemented active plane tracking, indication markers, and a button to add new objects. As our project 
will involve placing posters/stickers on vertical surfaces, we changed our plane tracking to track only vertical planes. While this causes some 
difficulties for walls that are wholly plain (due to a lack of features for Unity to detect), it does work well on other vertical planes, such as 
doors and open laptops. We expect it to also work on walls that are not a uniform colour, e.g walls that already have at least one poster already.

Our indication marker is the same as in the previous assignment. We now have a catalogue of 3 objects (2D art). These are all displayed in a row at 
all times. On clicking an object, the check mark button lights up, enabling the user to place the object wherever the indication marker is.

A dustbin button enables deletion of all objects in the scene. This was implemented using Unity tags, and deleting GameObjects with the relevant
tag. 


### <ins>Exercise 2</ins>
For this exercise we started with a bit of a refactoring, this made it easier to handle what is effectively 2 different states of our application: 
The "adding" state and the "interact" state. To model this we split up the intended functionality into 3 parts: The "State" class would be 
responsible for knowing which state we are in, and enabling/disabling the other 2 classes based on the state. The "RealObjectAdder" class would be 
responsible for the "adding" state and the "RealObjectInteracter" class would be responsible for the "interact" state (e.g showing deletion button 
when an object is selected). 

The default state is the "interact" state, if the "Add object" button is clicked, the "adding" state will be entered. 

In the "interact" state, when a user presses an object the object is selected and highlighted in yellow. The highlighting is done 
using a yellow plane, which is added as a child to the object. The yellow plane is then scaled to be slightly bigger than the object and slightly behind it. The 
user can deselect the object by pressing it again, or by selecting another object. 

![img](media/assignment_3/red_highlight.jpg)

To let the user delete the selected object, we SetActive(true) on the "Delete" button whenever the user has selected an object. When the user 
deselects or deletes the object, we SetActive(false) on "Delete" button. 

### <ins>Exercise 3</ins>
For this exercise we enable translational and rotational motion of the object. We enable translation when the user selects an object and uses one
finger to drag it across the screen. This does not affect any other virtual objects that the selected object is very close to. At all times we check
for the existence of a (vertical) plane before moving. 

If, after selection, the user is touching the screen with multiple fingers, we assume the user wishes to rotate the object. For this, we track the 
starting and ending positions of both fingers. We use the difference between the slopes of the line for these two pairs of positions to compute the 
angle by which we must rotate the object. 


## Conclusion
[TODO: conclusions of this weeks exercises]

## References
[TODO: used references]
